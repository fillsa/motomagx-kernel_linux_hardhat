Motorola Kernel Configuration Guide
===================================

Copyright 2006 Motorola, Inc.

This documentation can be found online at: 
http://sourceforge.mot.com/twiki/bin/view/Brava/KernelDefconfigHowto

1.) Introduction and Motivation
===============================

In order to reduce the overhead associated with maintaining and updating kernel
default configuration, defconfig, files for all supported platforms, a way has
been developed to generate the defconfig file at build time. While admittedly
this new approach increases the number of files containing configuration data
for the Linux kernel, it should reduce the number of files that a developer
must change when he or she needs to update the kernel configuration.

The new approach to maintaining the kernel configuration divides the
configuration into four layers: global configuration settings, product-family
configuration settings, product-specific configuration settings, and
feature-specific configuration settings.

The previous policy for adding kernel configuration options still applies: see
http://sourceforge.mot.com/twiki/bin/view/Brava/KernelConfigPolicy

Be sure to add any new kernel configuration options to the kernel's Kconfig
system using the steps described in the Kernel Config Policy before adding
them to any of the kernel configuration files.

2.) Layers
==========

2.1) Global Settings
====================

Location:
/vobs/jem/hardhat/linux-2.6.x/arch/arm/configs/motorola_ljap_defconfig

This file contains settings that are applied to all products.

2.2) Product Family Settings
============================

Location:
/vobs/jem/hardhat/linux-2.6.x/arch/arm/configs/motorola_ljap/product-family/${PRODUCT_FAMILY}.config

This file contains settings that are applied to all products in a particular
product family. At this time, product families are defined based on
system-on-chip (SOC) type: scma11, argon, zeus.  Settings in this file will
override settings from the global settings file.

2.3) Product-Specific Settings
==============================

Location:
/vobs/jem/hardhat/linux-2.6.x/arch/arm/configs/motorola_ljap/product/${PRODUCT
}.config

This file contains settings that are specific to a particular product.
Settings at this level override settings from the global and product-family
layers.

2.4) Feature Specific Settings
==============================

This layer can be used to override settings from the global, product family,
and product-specific layer. Feature-specific settings configuration files will
reside in:

/vobs/jem/hardhat/linux-2.6.x/arch/arm/configs/motorola_ljap/feature/
 
3.) How it Works
================

The Makefile /vobs/jem/hardhat/Makefile generates an ordered list of
configuration files. These configuration files are then concatenated together
and passed to the Linux kernel's Kconfig program. Kconfig works in such a way
that if a setting appears multiple times in a file, the value it is assigned
by the last instance overrides the previous values.

For instance, if the following lines were to appear in a defconfig file,
Kconfig would choose the "# CONFIG_MOT_FEAT_COOL_FEATURE is not set" setting:

    CONFIG_MOT_FEAT_COOL_FEATURE=y
    CONFIG_MOT_FEAT_COOL_FEATURE=m
    # CONFIG_MOT_FEAT_COOL_FEATURE is not set

The generated defconfig file is placed in:
/vobs/jem/os_release/arm/arm_v6_vfp_le/${PRODUCT}/${PRODUCT}_defconfig

The .config file generated by the kernel is placed in:
/vobs/jem/os_release/arm/arm_v6_vfp_le/${PRODUCT}/build/.config

If you encounter a problem with a kernel configuration setting, check these
files to make sure the setting is being applied as expected.

4.) Use Cases
=============

4.1) Adding a New Option That Applies to All Products
=====================================================

Let's say that you have found a problem in code delivered from an external
vendor. This code is present on all of our products. Under these circumstances
you will want to modify the global configuration file.

First follow the steps in
http://sourceforge.mot.com/twiki/bin/view/Brava/KernelConfigPolicy to create
a new Kconfig option. Since you are correcting vendor code you will need
to file a WSAN, and your new configuration option will be name
CONFIG_MOT_WFNnnn (where nnn is the number of the new WSAN).

Next, simply add CONFIG_MOT_WFNnnn (where nnn is the number of the new WSAN)
to /vobs/jem/hardhat/linux-2.6.x/arch/arm/configs/motorola_ljap_defconfig.

4.2) Adding a New Feature That Only Applies to A Particular Product-Family
==========================================================================

Let's say that you are working on adding kernel support for a cool feature
of the Argon processor, and that this new code is to be used on all
Argon-based phones. In this case you will want to modify the Argon
product-family configuration file.

Just as in first example, make sure the new configuration setting has been
properly added to the Kconfig system: see
http://sourceforge.mot.com/twiki/bin/view/Brava/KernelConfigPolicy

We prefer to have all kernel configuration options we add disabled by default.
So edit /vobs/jem/hardhat/linux-2.6.x/arch/arm/configs/motorola_ljap_defconfig
and explicitly turn off your new option. For example:

    # CONFIG_MOT_FEAT_COOL_ARGON_THING is not set

Now edit /vobs/jem/hardhat/linux-2.6.x/arch/arm/configs/motorola_ljap/product-family/argon.config
and enable your new setting. For example:

    CONFIG_MOT_FEAT_COOL_ARGON_THING=y

4.3) Adding a New Feature That Exists Only On a Subset of Phones
================================================================

If you need to add a feature that will exist on multiple phones.perhaps across
multiple product-families.you may want to consider using the feature-specific
layer.

Your first step is to work with the LJ Build Environment team to define a new
FEAT_ or HW_ flag that will be used to indicate which phones have the new
feature. Let's say that the Build Environment team names the new flag
HW_HOLOGRAPHIC_PROJECTOR. This flag will be set to 1 in the build
environment for products that support the holographic projector, and set to 0
otherwise.

Your next step is to add a new setting to the Kconfig system: see
http://sourceforge.mot.com/twiki/bin/view/Brava/KernelConfigPolicy

Let's name the configuration option CONFIG_MOT_FEAT_HOLOGRAPH_DRIVER.

Now, edit /vobs/jem/hardhat/Makefile and add something similar to the
following to the area of the file dealing with PRODUCT_SPECIFIC_DEFCONFIGS:

    ifneq ($(HW_HOLOGRAPHIC_PROJECTOR),0)
        PRODUCT_SPECIFIC_DEFCONFIGS += ${LJAPDEFCONFIGSRC}/feature/holograph.config
    endif

Now edit /vobs/jem/hardhat/linux-2.6.x/arch/arm/configs/motorola_ljap_defconfig to
disable your new configuration option by default:

    # CONFIG_MOT_FEAT_HOLOGRAPH_DRIVER is not set

Finally, create a file named /vobs/jem/hardhat/linux-2.6.x/arch/arm/configs/motorola_ljap/feature/holograph.config
and set your configuration option to be enabled when this file is included:

    CONFIG_MOT_FEAT_HOLOGRAPH_DRIVER=y
